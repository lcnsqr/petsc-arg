#+STARTUP: overview indent inlineimages logdrawer
#+TITLE: Lab Notebook: PETSc Autotuning
#+AUTHOR:
#+LANGUAGE:    en
#+TAGS: noexport(n) Stats(S)
#+EXPORT_SELECT_TAGS: Blog
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+COLUMNS: %25ITEM %TODO %3PRIORITY %TAGS
#+SEQ_TODO: TODO(t!) STARTED(s!) WAITING(w@) APPT(a!) | DONE(d!) CANCELLED(c!) DEFERRED(f!)

#+LATEX_CLASS_OPTIONS: [a4paper]
#+LATEX_HEADER: \usepackage[margin=2cm]{geometry}
#+LATEX_HEADER: \usepackage{sourcecodepro}
#+LATEX_HEADER: \usepackage{booktabs}
#+LATEX_HEADER: \usepackage{array}
#+LATEX_HEADER: \usepackage{colortbl}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usepackage{algpseudocode}
#+LATEX_HEADER: \usepackage{algorithm}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage[scale=2]{ccicons}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{relsize}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{bm}
#+LATEX_HEADER: \usepackage{amsfonts}
#+LATEX_HEADER: \usepackage{wasysym}
#+LATEX_HEADER: \usepackage{float}
#+LATEX_HEADER: \usepackage{ragged2e}
#+LATEX_HEADER: \usepackage{textcomp}
#+LATEX_HEADER: \usepackage{pgfplots}
#+LATEX_HEADER: \usepackage{todonotes}
#+LATEX_HEADER: \usepgfplotslibrary{dateplot}
#+LATEX_HEADER: \lstdefinelanguage{Julia}%
#+LATEX_HEADER:   {morekeywords={abstract,struct,break,case,catch,const,continue,do,else,elseif,%
#+LATEX_HEADER:       end,export,false,for,function,immutable,mutable,using,import,importall,if,in,%
#+LATEX_HEADER:       macro,module,quote,return,switch,true,try,catch,type,typealias,%
#+LATEX_HEADER:       while,<:,+,-,::,/},%
#+LATEX_HEADER:    sensitive=true,%
#+LATEX_HEADER:    alsoother={$},%
#+LATEX_HEADER:    morecomment=[l]\#,%
#+LATEX_HEADER:    morecomment=[n]{\#=}{=\#},%
#+LATEX_HEADER:    morestring=[s]{"}{"},%
#+LATEX_HEADER:    morestring=[m]{'}{'},%
#+LATEX_HEADER: }[keywords,comments,strings]%
#+LATEX_HEADER: \lstset{ %
#+LATEX_HEADER:   backgroundcolor={},
#+LATEX_HEADER:   basicstyle=\ttfamily\scriptsize,
#+LATEX_HEADER:   breakatwhitespace=true,
#+LATEX_HEADER:   breaklines=true,
#+LATEX_HEADER:   captionpos=n,
# #+LATEX_HEADER:   escapeinside={\%*}{*)},
#+LATEX_HEADER:   extendedchars=true,
#+LATEX_HEADER:   frame=n,
#+LATEX_HEADER:   language=R,
#+LATEX_HEADER:   rulecolor=\color{black},
#+LATEX_HEADER:   showspaces=false,
#+LATEX_HEADER:   showstringspaces=false,
#+LATEX_HEADER:   showtabs=false,
#+LATEX_HEADER:   stepnumber=2,
#+LATEX_HEADER:   stringstyle=\color{gray},
#+LATEX_HEADER:   tabsize=2,
#+LATEX_HEADER: }
#+LATEX_HEADER: \renewcommand*{\UrlFont}{\ttfamily\smaller\relax}

* PETSc Solver and Preconditioner Full Factorial Experiments
** CPU
*** Loading Data
#+begin_SRC R :results output :session *R* :eval no-export :exports results :tangle "../plot_scripts/heatmaps.r"
df <- read.csv("../ExperimentalDesign/full_cpu_np20.csv")
str(df)
#+end_SRC

#+RESULTS:
: 'data.frame':	576 obs. of  3 variables:
:  $ ksp_type: chr  "cg" "gmres" "fcg" "tcqmr" ...
:  $ pc_type : chr  "jacobi" "jacobi" "jacobi" "jacobi" ...
:  $ response: num  7.82 87.95 16.87 133.41 13.72 ...
*** Analyses
**** ANOVA tests
#+begin_SRC R :results output :session *R* :eval no-export :exports results
library(dplyr)
obj <- df %>% group_by(ksp_type) %>% do(model = aov(response ~ pc_type, data = .))
lapply(obj$model, summary)
#+end_SRC

#+RESULTS:
#+begin_example
[[1]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  142.6   47.54   1.218  0.311
Residuals   60 2341.4   39.02

[[2]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3   18.5    6.16   0.146  0.932
Residuals   60 2529.3   42.16

[[3]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  189.4   63.12   1.561  0.208
Residuals   60 2425.7   40.43

[[4]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3     58   19.33   0.894   0.45
Residuals   60   1298   21.63

[[5]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  499.6  166.54    3.21 0.0292 *
Residuals   60 3112.6   51.88
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[6]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  13781    4594   1.719  0.173
Residuals   60 160383    2673

[[7]]
            Df Sum Sq Mean Sq F value   Pr(>F)
pc_type      3  45609   15203   7.413 0.000264 ***
Residuals   60 123047    2051
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[8]]
            Df Sum Sq Mean Sq F value   Pr(>F)
pc_type      3 147040   49013   29.35 8.33e-12 ***
Residuals   60 100198    1670
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[9]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  331.8  110.61   3.036 0.0359 *
Residuals   60 2185.6   36.43
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#+end_example

#+begin_SRC R :results output :session *R* :eval no-export :exports results
library(dplyr)
obj <- df %>% group_by(pc_type) %>% do(model = aov(response ~ ksp_type, data = .))
lapply(obj$model, summary)
#+end_SRC

#+RESULTS:
#+begin_example
[[1]]
             Df Sum Sq Mean Sq F value Pr(>F)
ksp_type      8 235264   29408   35.45 <2e-16 ***
Residuals   135 111977     829
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[2]]
             Df Sum Sq Mean Sq F value Pr(>F)
ksp_type      8 361299   45162   765.2 <2e-16 ***
Residuals   135   7968      59
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[3]]
             Df Sum Sq Mean Sq F value Pr(>F)
ksp_type      8 125786   15723   47.13 <2e-16 ***
Residuals   135  45036     334
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[4]]
             Df Sum Sq Mean Sq F value Pr(>F)
ksp_type      8 435595   54449   31.61 <2e-16 ***
Residuals   135 232540    1723
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#+end_example
*** Mean + CI Heatmap
#+begin_SRC R :results graphics output :session *R* :file "../pictures/cpu_means_heatmap.pdf" :width 10 :height 16 :eval no-export :tangle "../plot_scripts/heatmaps.r"
library(dplyr)
library(ggplot2)
library(paletteer)

#cf_palette <- "pals::jet"
cf_palette <- "pals::coolwarm"
base_size <- 20

plot_df <- df %>%
    group_by(ksp_type, pc_type) %>%
    mutate(experiment_id = row_number(),
           mean_response = mean(response),
           ci_response = (1.96 * sd(response)) / sqrt(n())) %>%
    ungroup() %>%
    distinct(ksp_type, pc_type, .keep_all = TRUE)

p <- ggplot(plot_df) +
    geom_tile(aes(y = ksp_type,
                  x = pc_type,
                  fill = mean_response,
                  color = mean_response)) +
    geom_text(aes(y = ksp_type,
                  x = pc_type,
                  label = paste(round(mean_response, 2),
                                "+/-",
                                round(ci_response, 1),
                                sep = "")),
              color = "white",
              size = 6) +
    scale_fill_paletteer_c(name = "Duration",
                           cf_palette,
                           guide = guide_colorbar(barwidth = 0.7,
                                                  barheight = 70,
                                                  direction = "vertical",
                                                  label.hjust = 1,
                                                  ticks = FALSE,
                                                  reverse = FALSE),
                           limits = c(min(plot_df$mean_response),
                                      max(plot_df$mean_response))) +
    scale_color_paletteer_c(cf_palette) +
    scale_x_discrete(expand = c(0,0)) +
    scale_y_discrete(expand = c(0,0)) +
    theme_bw(base_size = base_size) +
    theme(legend.position = "right",
          legend.background = element_rect(fill = "transparent", colour = NA),
          legend.text = element_text(size = 16),
          legend.title = element_text(size = 23, margin = margin(r = 10)),
          legend.spacing.x = unit(0.0, 'cm'),
          axis.ticks.y = element_blank(),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank()) +
    guides(color = FALSE)

p
#+end_SRC

#+RESULTS:
[[file:../pictures/cpu_means_heatmap.pdf]]

*** Saving (Just for Tangling Scripts)
#+begin_SRC R :results output :session *R* :eval no-export :exports results :tangle "../plot_scripts/heatmaps.r"
ggsave("../pictures/cpu_means_heatmap.pdf",
       p,
       "pdf",
       width = 10,
       height = 16)

#+end_SRC
** GPU
*** Loading Data
#+begin_SRC R :results output :session *R* :eval no-export :exports results :tangle "../plot_scripts/heatmaps.r"
df <- read.csv("../ExperimentalDesign/full_gpu.csv")
str(df)
#+end_SRC

#+RESULTS:
: 'data.frame':	432 obs. of  3 variables:
:  $ ksp_type: chr  "cg" "gmres" "fcg" "tcqmr" ...
:  $ pc_type : chr  "jacobi" "jacobi" "jacobi" "jacobi" ...
:  $ response: num  37.9 232 70 238.2 68.2 ...
*** Analyses
**** ANOVA tests
#+begin_SRC R :results output :session *R* :eval no-export :exports results
library(dplyr)
obj <- df %>% group_by(ksp_type) %>% do(model = aov(response ~ pc_type, data = .))
lapply(obj$model, summary)
#+end_SRC

#+RESULTS:
#+begin_example
[[1]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  142.6   47.54   1.218  0.311
Residuals   60 2341.4   39.02

[[2]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3   18.5    6.16   0.146  0.932
Residuals   60 2529.3   42.16

[[3]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  189.4   63.12   1.561  0.208
Residuals   60 2425.7   40.43

[[4]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3     58   19.33   0.894   0.45
Residuals   60   1298   21.63

[[5]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  499.6  166.54    3.21 0.0292 *
Residuals   60 3112.6   51.88
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[6]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  13781    4594   1.719  0.173
Residuals   60 160383    2673

[[7]]
            Df Sum Sq Mean Sq F value   Pr(>F)
pc_type      3  45609   15203   7.413 0.000264 ***
Residuals   60 123047    2051
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[8]]
            Df Sum Sq Mean Sq F value   Pr(>F)
pc_type      3 147040   49013   29.35 8.33e-12 ***
Residuals   60 100198    1670
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[9]]
            Df Sum Sq Mean Sq F value Pr(>F)
pc_type      3  331.8  110.61   3.036 0.0359 *
Residuals   60 2185.6   36.43
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#+end_example

#+begin_SRC R :results output :session *R* :eval no-export :exports results
library(dplyr)
obj <- df %>% group_by(pc_type) %>% do(model = aov(response ~ ksp_type, data = .))
lapply(obj$model, summary)
#+end_SRC

#+RESULTS:
#+begin_example
[[1]]
             Df Sum Sq Mean Sq F value Pr(>F)
ksp_type      8 235264   29408   35.45 <2e-16 ***
Residuals   135 111977     829
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[2]]
             Df Sum Sq Mean Sq F value Pr(>F)
ksp_type      8 361299   45162   765.2 <2e-16 ***
Residuals   135   7968      59
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[3]]
             Df Sum Sq Mean Sq F value Pr(>F)
ksp_type      8 125786   15723   47.13 <2e-16 ***
Residuals   135  45036     334
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

[[4]]
             Df Sum Sq Mean Sq F value Pr(>F)
ksp_type      8 435595   54449   31.61 <2e-16 ***
Residuals   135 232540    1723
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#+end_example
*** Mean + CI Heatmap
#+begin_SRC R :results graphics output :session *R* :file "../pictures/gpu_means_heatmap.pdf" :width 10 :height 16 :eval no-export :tangle "../plot_scripts/heatmaps.r"
library(dplyr)
library(ggplot2)
library(paletteer)

#cf_palette <- "pals::jet"
cf_palette <- "pals::coolwarm"
base_size <- 20

plot_df <- df %>%
    group_by(ksp_type, pc_type) %>%
    mutate(experiment_id = row_number(),
           mean_response = mean(response),
           ci_response = (1.96 * sd(response)) / sqrt(n())) %>%
    ungroup() %>%
    distinct(ksp_type, pc_type, .keep_all = TRUE)

p <- ggplot(plot_df) +
    geom_tile(aes(y = ksp_type,
                  x = pc_type,
                  fill = mean_response,
                  color = mean_response)) +
    geom_text(aes(y = ksp_type,
                  x = pc_type,
                  label = paste(round(mean_response, 2),
                                "+/-",
                                round(ci_response, 1),
                                sep = "")),
              color = "white",
              size = 6) +
    scale_fill_paletteer_c(name = "Duration",
                           cf_palette,
                           guide = guide_colorbar(barwidth = 0.7,
                                                  barheight = 70,
                                                  direction = "vertical",
                                                  label.hjust = 1,
                                                  ticks = FALSE,
                                                  reverse = FALSE),
                           limits = c(min(plot_df$mean_response),
                                      max(plot_df$mean_response))) +
    scale_color_paletteer_c(cf_palette) +
    scale_x_discrete(expand = c(0,0)) +
    scale_y_discrete(expand = c(0,0)) +
    theme_bw(base_size = base_size) +
    theme(legend.position = "right",
          legend.background = element_rect(fill = "transparent", colour = NA),
          legend.text = element_text(size = 16),
          legend.title = element_text(size = 23, margin = margin(r = 10)),
          legend.spacing.x = unit(0.0, 'cm'),
          axis.ticks.y = element_blank(),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank()) +
    guides(color = FALSE)

p
#+end_SRC

#+RESULTS:
[[file:../pictures/gpu_means_heatmap.pdf]]

*** Saving (Just for Tangling Scripts)
#+begin_SRC R :results output :session *R* :eval no-export :exports results :tangle "../plot_scripts/heatmaps.r"
ggsave("../pictures/gpu_means_heatmap.pdf",
       p,
       "pdf",
       width = 10,
       height = 16)

#+end_SRC
